package br.com.financeiro.util;

import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

public class HibernateUtil {

	private static final SessionFactory sessionFactory = buildSessionFactory();

	private static SessionFactory buildSessionFactory() {
		try {
			// Cria uma conexão a partir do hibernate.cfg.xml

			/*
			Configuration configuration = new Configuration();
			configuration.configure();

			ServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder()
					.applySettings(configuration.getProperties()).build();

			SessionFactory sessionFactory = configuration.buildSessionFactory(serviceRegistry);

			return sessionFactory;*/
			
			StandardServiceRegistry registry;
		    SessionFactory sessionFactory;
		    registry = new StandardServiceRegistryBuilder().configure().build();

		    MetadataSources sources = new MetadataSources(registry);

		    Metadata metadata = sources.getMetadataBuilder().build();

		    sessionFactory = metadata.getSessionFactoryBuilder().build();
		    return sessionFactory;
			

		} catch (Throwable ex) {
			// Mensagem de erro ao conectar
			System.err.println("Erro de conexão. " + ex);
			throw new ExceptionInInitializerError(ex);
		}
	}
	
	public static SessionFactory getSessionFactory() {
		return sessionFactory;
	}

}
